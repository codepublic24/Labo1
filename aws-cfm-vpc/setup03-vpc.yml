AWSTemplateFormatVersion: '2010-09-09'
#
# [Description:]
#   Create VPC public/private.
#  [Usage]
#    aws cloudformation create-stack 
#      --template-body file://setup03-vpc.yml
#      --stack-name <unique-stack-name> 
#      --parameters 
#      ParameterKey=ArgProjectName,ParameterValue=<project-name> 
#      ParameterKey=ArgVpcCidr,ParameterValue=<cidr> 
#      ParameterKey=ArgPublicSubnetCidr,ParameterValue=<cidr> 
#  [Example]
#    ---Initialize setting
#    cd <this yaml file path>
#    export AWS_DEFAULT_PROFILE=<profile_name>
#    unset AWS_CFSTACK_ARGS_VPC
#    export AWS_CFSTACK_ARGS_VPC=$(cat << EOM
#    --template-body file://setup03-vpc.yml 
#    --stack-name cf-simplesvr1-01vpn 
#    --parameters 
#    ParameterKey=ArgProjectName,ParameterValue=prj-simplesvr1 
#    ParameterKey=ArgVpcCidr,ParameterValue=10.0.0.0/16 
#    ParameterKey=ArgPublicSubnetCidr,ParameterValue=10.0.0.0/24 
#    ParameterKey=ArgPrivateSubnetCidr,ParameterValue=10.0.1.0/24 
#    EOM
#    )
#    echo $AWS_CFSTACK_ARGS_VPC
#
#    ---When validation template
#    aws cloudformation validate-template --template-body file://setup03-vpc.yml
#
#    ---When create stack
#    aws cloudformation create-stack $AWS_CFSTACK_ARGS_VPC
#
#    ---When delete stack
#    aws cloudformation delete-stack --stack-name cf-simplesvr1-01vpn 
#
Description:
  CloudFormation Template

Parameters:
  ArgProjectName:
    Type: String
    Default: "prj-default"
    AllowedPattern: "[0-9a-zA-Z\\-]*"
  ArgVpcCidr:
    Type: String
    Default: "172.16.0.0/16"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  ArgPublicSubnetCidr:
    Type: String
    Default: "172.16.0.0/24"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  ArgPrivateSubnetCidr:
    Type: String
    Default: "172.16.1.0/24"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref ArgVpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub 
            - "${prjname}-vpc"
            - { prjname: !Ref ArgProjectName }

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub 
            - "${prjname}-igw"
            - { prjname: !Ref ArgProjectName }

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub 
            - "${prjname}-pub-rtb"
            - { prjname: !Ref ArgProjectName }

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      CidrBlock: !Ref ArgPublicSubnetCidr
      MapPublicIpOnLaunch: 'true'
      AvailabilityZone: 'ap-northeast-1a'
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub 
            - "${prjname}-pub-subnet"
            - { prjname: !Ref ArgProjectName }

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      CidrBlock: !Ref ArgPrivateSubnetCidr
      MapPublicIpOnLaunch: 'false'
      AvailabilityZone: 'ap-northeast-1a'
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub 
            - "${prjname}-pri-subnet"
            - { prjname: !Ref ArgProjectName }

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

Outputs:
  ExportParamVpcId:
    Value: !Ref VPC
    Export:
      Name: !Sub 
            - "Export-${prjname}-VpcId"
            - { prjname: !Ref ArgProjectName }
  ExportParamPublicSubnet:
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub 
            - "Export-${prjname}-PublicSubnet"
            - { prjname: !Ref ArgProjectName }
  ExportParamPrivateSubnet:
    Value: !Ref PrivateSubnet
    Export:
      Name: !Sub 
            - "Export-${prjname}-PrivateSubnet"
            - { prjname: !Ref ArgProjectName }
