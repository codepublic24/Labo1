AWSTemplateFormatVersion: '2010-09-09'
#
# [Description:]
#   Create VPC public/private.
#  [Usage]
#    aws cloudformation create-stack --stack-name <cfm-unique-name> --template-body file://setup03-vpc.yml
#  [Example]
#    ---Initialize setting
#    export AWS_DEFAULT_PROFILE=<profile_name>
#    cd <this yaml file path>
#
#    ---When validation template
#    aws cloudformation validate-template --template-body file://setup03-vpc.yml
#
#    ---When create stack
#    aws cloudformation create-stack --stack-name cfm-vpn-test3 --template-body file://setup03-vpc.yml
#
#    ---When delete stack
#    aws cloudformation delete-stack --stack-name cfm-vpn-test3
#
Description:
  CloudFormation Template

Mappings:
  StackConfig:
    VPC:
      CIDR: 10.0.0.0/16
    PublicSubnet:
      CIDR: 10.0.0.0/24
    PrivateSubnet:
      CIDR: 10.0.1.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap
        - StackConfig
        - VPC
        - CIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-vpc"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-igw"

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-pub-rt-tbl"

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      CidrBlock: !FindInMap
        - StackConfig
        - PublicSubnet
        - CIDR
      MapPublicIpOnLaunch: 'true'
      AvailabilityZone: 'ap-northeast-1a'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-pub-sub"

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      CidrBlock: !FindInMap
        - StackConfig
        - PrivateSubnet
        - CIDR
      MapPublicIpOnLaunch: 'false'
      AvailabilityZone: 'ap-northeast-1a'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-pri-sub"

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

Outputs:
  ExpParamVpcId:
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-ExpParamVpcId"
  ExpParamPublicSubnet:
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub "${AWS::StackName}-ExpParamPublicSubnet"
  ExpParamPrivateSubnet:
    Value: !Ref PrivateSubnet
    Export:
      Name: !Sub "${AWS::StackName}-ExpParamPrivateSubnet"
